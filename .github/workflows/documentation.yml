name: documentation

on: [pull_request, workflow_dispatch]

permissions:
  contents: write

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with docs --no-interaction --no-root
        
      - name: Install project
        run: poetry install --no-interaction

      - name: Sphinx build
        working-directory: ./docs
        run: |
          source .venv/bin/activate
          make clean
          make html
  
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        # this command only run on push to main
        # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/html/
          force_orphan: true

      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   # if the branch is not main, deploy to a branch with the same name
      #   if: ${{ github.event_name == 'push' && github.ref != 'refs/heads/main' }}
      #   with:
      #     publish_branch: ${{ github.ref }}
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: _build/
      #     force_orphan: true